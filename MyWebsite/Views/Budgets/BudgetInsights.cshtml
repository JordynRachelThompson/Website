@model MyWebsite.Models.BudgetApp.BudgetInsightsViewModel

<div class="partialLoginText"><p>@Html.Partial("_LoginPartial", 1)</p></div>
<h3 class="painlessBudgetTitle">The Painless Budget</h3>
<div style="margin-top: 25px; text-align: center;">
    <a href='@Url.Action("Index", "Budgets")' ; class="waves-effect waves-light btn-large greyBudgetBtn"><i class="material-icons left">arrow_back</i>Return to Budget Dashboard</a>
</div>

<h4 style="margin: 50px; text-align:center"><i class="far fa-chart-bar"></i> Budget Insights</h4>
@if(ViewBag.NotEnoughInfoMsg != null)
{
    <h5 class="container flow-text" style="text-align: center">@ViewBag.NotEnoughInfoMsg</h5>
}

<div class="row" style="padding: 60px;">
    <div class="col s12">
        <ul class="tabs tabs-fixed-width z-depth-1">
            <li class="tab col s3"><a href="#tab1">Average Spending</a></li>
            <li class="tab col s3"><a href="#tab2">Average Savings</a></li>
            <li class="tab col s3"><a href="#tab3">Insights By Category</a></li>
        </ul>
    </div>

    @if (Model != null)
    {
        <div>
            @*TAB ONE*@
            <div style="margin-top: 20px; background-color: #080C10; font-size: 20px;" id="tab1" class="col s12 white-text flow-text waves-ripple">
                <div class="row">
                    <div class="col l4 m12">
                        <div class="card-panel z-depth-5" style="background-color: #37474f">
                            <span>
                                <i style="margin-right: 10px;" class="fas fa-money-check-alt"></i>Average Monthly Spending
                            </span>
                            <span style="float: right">
                                @if (Model.AmtOverOrUnder > 0)
                                {
                                    @String.Format("{0:C}", Model.AvgMonthlySpending)
                                }
                                else
                                {
                                    <i class="fas fa-exclamation-circle"></i><text> No information</text>
                                }
                            </span>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col l4 m12">
                        <div class="card-panel z-depth-5" style="background-color: #37474f">
                            <span>
                                <i class="fas fa-long-arrow-alt-up"></i> <i class="fas fa-long-arrow-alt-down" style="margin-right: 10px;"></i>Total Amount Over | Under Budget
                            </span>
                            <span style="float:right">
                                @if (Model.AmtOverOrUnder > 0)
                                {
                                    @String.Format("{0:C}", Model.AmtOverOrUnder)<span> under</span>
                                }
                                @if (Model.AmtOverOrUnder < 0)
                                {
                                    @Math.Abs(Model.AmtOverOrUnder)<span style="color:#d32f2f !important;"> over</span>
                                }
                            </span>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col l4 m12">
                        <div class="card-panel z-depth-5" style="background-color: #37474f">
                            <span>
                                <i style="margin-right: 10px;" class="fas fa-credit-card"></i>Most Common Purchase
                            </span>
                            <span style="float: right">
                                @if (Model.CategoryTimes > 0)
                                {
                                    @Model.MostCommonCategory<text> </text>@Model.CategoryTimes <text > times</text>
                                }
                                else
                                {
                                    <i class="fas fa-exclamation-circle"></i><text> No information</text>
                                }
                            </span>
                        </div>
                    </div>
                </div>
            </div>
            @*TAB TWO*@
            <div style="margin-top: 20px; background-color: #080C10; font-size: 20px;" id="tab2" class="col s12 white-text flow-text waves-ripple">
                <div class="row">
                    <div class="col l4 offset-l4 m12">
                        <div class="card-panel z-depth-5" style="background-color: #37474f">
                            <span>
                                <i style="margin-right: 10px;" class="far fa-calendar-alt"></i>Number of Months Under Budget
                            </span>
                            <span style="float: right">
                                @if (Model.TotalMonths > 0)
                                {
                                    @Model.NumMonthsUnderBudget <text>/</text> @Model.TotalMonths <text> months</text>
                                }
                                else
                                {
                                    <i class="fas fa-exclamation-circle"></i><text> No information</text>
                                }
                            </span>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col l4 offset-l4 m12">
                        <div class="card-panel z-depth-5" style="background-color: #37474f">
                            <span>
                                <i style="margin-right: 10px;" class="fas fa-balance-scale"></i>Compare Last Two Months
                            </span>
                            <span style="float: right">
                                @if (Model.TotalSpentFirstMonth > 0 || Model.TotalSpentSecondMonth > 0)
                                {
                                    <text>@DateTime.Now.ToString("MMMM").Substring(0, 3) : @String.Format("{0:C}", Model.TotalSpentFirstMonth)</text>
                                    <text>@DateTime.Now.AddMonths(-1).ToString("MMMM").Substring(0, 3) : @String.Format("{0:C}", Model.TotalSpentSecondMonth)</text>
                                }
                                else
                                {
                                    <i class="fas fa-exclamation-circle"></i><text> No information</text>
                                }
                            </span>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col l4 offset-l4 m12">
                        <div class="card-panel z-depth-5" style="background-color: #37474f">
                            <span class="white-text">
                                <i style="margin-right: 10px;" class="fas fa-piggy-bank"></i>Category with Highest Savings
                            </span>
                            <span style="float: right">
                                @if (Model.HighSaveAmt > 0)
                                {
                                    <text>@Model.HighSaveCat : @String.Format("{0:C}", Model.HighSaveAmt)</text>
                                }
                                else
                                {
                                    <i class="fas fa-exclamation-circle"></i><text> No information</text>
                                }
                            </span>
                        </div>
                    </div>
                </div>
            </div>
            @*TAB THREE*@
            <div style="margin-top: 20px; background-color: #080C10; font-size: 20px;" id="tab3" class="col s12 white-text flow-text waves-ripple">
                <div class="row" style="float:right !important">
                    <div class="col l12">
                        <button id="food" class="waves-effect waves-light btn-large greyBudgetBtn budgetCatBtns"><i class="material-icons left">local_dining</i>Food</button>
                        <button id="housing" class="waves-effect waves-light btn-large greyBudgetBtn budgetCatBtns"><i class="material-icons left">home</i>Housing</button>
                        <button id="bills" class="waves-effect waves-light btn-large greyBudgetBtn budgetCatBtns"><i class="material-icons left">monetization_on</i>Bills | Payments</button>
                        <button id="entertainment" class="waves-effect waves-light btn-large greyBudgetBtn budgetCatBtns"><i class="material-icons left">local_activity</i>Entertainment</button>
                        <button id="gas" class="waves-effect waves-light btn-large greyBudgetBtn budgetCatBtns"><i class="material-icons left">drive_eta</i>Gas | Auto</button>
                        <button id="misc" class="waves-effect waves-light btn-large greyBudgetBtn budgetCatBtns"><i class="material-icons left">gesture</i>Misc</button>
                    </div>
                </div>
                    @foreach (var dataItem in Model.BudgetInsightsByCategoryList)
                    {
                        var hiddenContainerId = "budgetInsights" + dataItem.CategoryType;
                        <div id=@hiddenContainerId class="col s12 m8" style="float: right; display:none">
                            <h5 style="text-align: center; margin: 30px;">@ViewBag.ListOfCategoryNames[dataItem.CategoryType - 1]</h5>
                            <table style="font-size: 17px;">
                                <tr style="border-bottom: 1px solid #cfd8dc;">
                                    <th>Average Spent Each Month</th>
                                    <th>Total Amount Over | Under Budget</th>
                                    <th>Number of Months Under Budget</th>
                                    <th>Average Purchase Price</th>
                                </tr>
                                <tr>
                                    <td style="text-align: center;">@String.Format("{0:C}", dataItem.AvgSpentPerMonth)</td>
                                    @if (dataItem.AvgOverUnderPerCategory > 0) //Under Budget
                                    {
                                        <td style="color: #c5e1a5 !important; text-align:center">@String.Format("{0:C}", dataItem.AvgOverUnderPerCategory) Under</td>
                                    }
                                    @if (dataItem.AvgOverUnderPerCategory == 0)
                                    {
                                        <td style="text-align:center"><i class="fas fa-exclamation-circle"></i><text> No information</text></td>
                                    }
                                    else if(dataItem.AvgOverUnderPerCategory != 0 && dataItem.AvgOverUnderPerCategory < 0) //Over Budget
                                    {
                                        <td style="color:#d32f2f !important; text-align:center">@String.Format("{0:C}", Math.Abs(dataItem.AvgOverUnderPerCategory)) Over</td>
                                    }
                                    @if (dataItem.NumMonthsUnderBudgetPerCat == 1)
                                    {
                                        <td style="text-align: center;">@dataItem.NumMonthsUnderBudgetPerCat Month</td>
                                    }
                                    else
                                    {
                                        <td style="text-align: center;">@dataItem.NumMonthsUnderBudgetPerCat Months</td>
                                    }
                                    <td style="text-align: center;">@String.Format("{0:C}", dataItem.AvgPurchasePrice)</td>
                                </tr>
                            </table>
                        </div>
                    }
               
            </div>
        </div>
    }

</div>


<style>
    .tabs .tab a {
        background-color: #bfe892 !important;
        color: black !important;
        font-weight: bold;
        font-size: medium;
    }

        .tabs .tab a.active {
            background-color: #c5e1a5 !important;
        }

    .tabs .indicator {
        background-color: #cfd8dc !important;
    }
</style>

<script>
    $(document).ready(function () {
        $('.tabs').tabs();
        $('select').formSelect();
    });

    var clickedFood = true;
    var clickedHousing = true;
    var clickedBills = true;
    var clickedEnt = true;
    var clickedGas = true;
    var clickedMisc = true;

    $('#food').on('click', function () {
        if (clickedFood) {
            $(this).css("cssText", "background-color: #37474f !important; font-weight:bold; font-size:20px; margin-top:10px;");
            clickedFood = false;
        } else {
            $(this).css("cssText", "background-color: #263238 !important; font-weight:bold; font-size:20px; margin-top:10px;");
            clickedFood = true;
        }
        $('#budgetInsights1').toggle();
    });

    $('#housing').on('click', function () {
        if (clickedHousing) {
            $(this).css("cssText", "background-color: #37474f !important; font-weight:bold; font-size:20px; margin-top:10px;");
            clickedHousing = false;
        } else {
            $(this).css("cssText", "background-color: #263238 !important; font-weight:bold; font-size:20px; margin-top:10px;");
            clickedHousing = true;
        }
        $('#budgetInsights2').toggle();
    });

    $('#bills').on('click', function () {
        if (clickedBills) {
            $(this).css("cssText", "background-color: #37474f !important; font-weight:bold; font-size:20px; margin-top:10px;");
            clickedBills = false;
        } else {
            $(this).css("cssText", "background-color: #263238 !important; font-weight:bold; font-size:20px; margin-top:10px;");
            clickedBills = true;
        }
        $('#budgetInsights3').toggle();
    });

    $('#entertainment').on('click', function () {
        if (clickedEnt) {
            $(this).css("cssText", "background-color: #37474f !important; font-weight:bold; font-size:20px; margin-top:10px;");
            clickedEnt = false;
        } else {
            $(this).css("cssText", "background-color: #263238 !important; font-weight:bold; font-size:20px; margin-top:10px;");
            clickedEnt = true;
        }
        $('#budgetInsights4').toggle();
    });

    $('#gas').on('click', function () {
        if (clickedGas) {
            $(this).css("cssText", "background-color: #37474f !important; font-weight:bold; font-size:20px; margin-top:10px;");
            clickedGas = false;
        } else {
            $(this).css("cssText", "background-color: #263238 !important; font-weight:bold; font-size:20px; margin-top:10px;");
            clickedGas = true;
        }
        $('#budgetInsights5').toggle();
    });

    $('#misc').on('click', function () {
        if (clickedMisc) {
            $(this).css("cssText", "background-color: #37474f !important; font-weight:bold; font-size:20px; margin-top:10px;");
            clickedMisc = false;
        } else {
            $(this).css("cssText", "background-color: #263238 !important; font-weight:bold; font-size:20px; margin-top:10px;");
            clickedMisc = true;
        }
        $('#budgetInsights6').toggle();
    });

</script>
