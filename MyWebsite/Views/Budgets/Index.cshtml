@model IEnumerable<MyWebsite.Models.BudgetProject.Budget>
@using Microsoft.AspNetCore.Identity
@using System.Linq
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<style>
    body {
        background-color: #5c5c5c !important;
    }
</style>

@{ var emptyBudget = Convert.ToBoolean(TempData["isBudgetEmpty"]);}

@{ string user = User.Identity.Name;
    var limit = Convert.ToInt32(TempData["totalLimit"]);
    var spent = Convert.ToInt32(TempData["totalSpent"]);
    int difference = limit - spent;}

<div style="text-align:center; margin-top:180px;"><p style="text-align:center;">@Html.Partial("_LoginPartial")</p></div>
<h3 style="text-align:center; color:black; margin-top:100px;">Budget App</h3>
<div style="border-bottom: 1px dotted #cfd8dc;"></div>

<h2 id="totalSpent" style="display:none">@spent</h2>
<h2 id="totalBudget" style="display:none">@limit</h2>

@if (!SignInManager.IsSignedIn(User))
{
    <p style="text-align:center; font-size:20px; margin-top:30px;">Please log in or register first to use the app.</p>
}
else
{
    @if (emptyBudget)
    {
        <div style="border-bottom: 1px dotted #76ff03;"></div>

        @*Set Budget Limit*@
        <form method="post" action="@Url.Action("Index", "Budgets")">
            <div style="margin-top:35px; text-align:center;"><input type="submit" value="SET" class="yellow-button" style="padding-left:200px; padding-right:200px; font-weight:bold; letter-spacing:2px;" /></div>
            <div class="row" style="margin-top:20px; margin-left:200px; margin-right:200px;">
                <div class="col s12 m6 l4">
                    <h5 style="margin-top:77px; font-weight:bold;">Groceries/Food</h5>
                    <div class="input-field">
                        <i class="material-icons prefix" style="margin-top:30px; color:#76ff03;">attach_money</i>
                        <input name="GroceryLimit" placeholder="0" id="budget-limit-amount" style="margin-top: 25px;" type="number" class="validate">
                    </div>
                </div>
                <div class="col s12 m6 l4">
                    <h5 style="margin-top:77px; font-weight:bold;">Housing/Rent</h5>
                    <div class="input-field">
                        <i class="material-icons prefix" style="margin-top:30px; color:#76ff03;">attach_money</i>
                        <input name="HousingLimit" placeholder="0" id="budget-limit-amount" style="margin-top: 25px;" type="number" class="validate">
                    </div>
                </div>
                <div class="col s12 m6 l4">
                    <h5 style="margin-top:77px; font-weight:bold;">Entertainment</h5>
                    <div class="input-field">
                        <i class="material-icons prefix" style="margin-top:30px; color:#76ff03;">attach_money</i>
                        <input name="EntLimit" placeholder="0" id="budget-limit-amount" style="margin-top: 25px;" type="number" class="validate">
                    </div>
                </div>
            </div>
            <div class="row" style="margin-top:80px; margin-left:200px; margin-right:200px;">
                <div class="col s12 m6 l4">
                    <h5 style="margin-top:77px; font-weight:bold;">Bills</h5>
                    <div class="input-field">
                        <i class="material-icons prefix" style="margin-top:30px; color:#76ff03;">attach_money</i>
                        <input name="BillsLimit" placeholder="0" id="budget-limit-amount" style="margin-top: 25px;" type="number" class="validate">
                    </div>
                </div>
                <div class="col s12 m6 l4">
                    <h5 style="margin-top:77px; font-weight:bold;">Car/Gas</h5>
                    <div class="input-field">
                        <i class="material-icons prefix" style="margin-top:30px; color:#76ff03;">attach_money</i>
                        <input name="GasLimit" placeholder="0" id="budget-limit-amount" style="margin-top: 25px;" type="number" class="validate">
                    </div>
                </div>
                <div class="col s12 m6 l4">
                    <h5 style="margin-top:77px; font-weight:bold;">Miscellaneous Expenses</h5>
                    <div class="input-field">
                        <i class="material-icons prefix" style="margin-top:30px; color:#76ff03;">attach_money</i>
                        <input name="MiscLimit" placeholder="0" id="budget-limit-amount" style="margin-top: 25px;" type="number" class="validate">
                    </div>
                </div>
            </div>
            @Html.Hidden("Email", user)
            @Html.Hidden("GroceryLimit", "GroceryLimit")
            @Html.Hidden("HousingLimit", "HousingLimit")
            @Html.Hidden("EntLimit", "EntLimit")
            @Html.Hidden("BillsLimit", "BillsLimit")
            @Html.Hidden("GasLimit", "GasLimit")
            @Html.Hidden("MiscLimit", "MiscLimit")
        </form>

        //End of Set Budget Limit

    }
    else
    {
        <div style="margin-top:55px; margin-bottom: 55px; text-align:center;">
            <a href='@Url.Action("AddTransaction", "Budgets")' class="waves-effect waves-light btn-large sharpCorners black" style="font-weight:bold; font-size:20px;"><i class="material-icons left">add_box</i>Add Transaction</a>
            @foreach (var item in Model)
            {
                <a asp-action="Edit" asp-route-id="@item.Id" class="waves-effect waves-light btn-large sharpCorners black" style="font-weight:bold; font-size:20px;"><i class="material-icons left">edit</i>Edit Budget Limit</a>
            }
        </div>

        @foreach (var item in Model)
        {
            <div class="container">
                <div class="row">
                    <div class="col s12 m12 l6">
                        @{double remainingG = item.GroceryLimit - Convert.ToDouble(TempData["groceryTotal"]);}

                        @*More than the total has been spent*@
                        @if (remainingG <= 0)
                        {
                            <h5 style="margin-left:150px;"><span style="color:#e6c5c4">$@remainingG.ToString("#,##0.00")</span></h5>
                        }

                        @*Still some of the budget left*@
                        else
                        {
                            <h5 style="margin-left:150px;"><span style="color:#b2dfdb">$@remainingG.ToString("#,##0.00")</span><span style="color:#cfd8dc "> / $@Convert.ToDouble(TempData["groceryTotal"]).ToString("#,##0.00")</span></h5>
                        }
                        <div id="donutchartGrocery" class="center-div" style="width: 500px; height: 300px; margin-top:-10px;"></div>
                    </div>

                    <div class="col s12 m12 l6">
                        @{double remainingH = item.HousingLimit - Convert.ToDouble(TempData["housingTotal"]);}

                        @*More than the total has been spent*@
                        @if (remainingH <= 0)
                        {
                            <h5 style="margin-left:150px;"><span style="color:#e6c5c4">$@remainingH.ToString("#,##0.00")</span></h5>
                        }

                        @*Still some of the budget left*@
                        else
                        {
                            <h5 style="margin-left:150px;"><span style="color:#b2dfdb">$@remainingH.ToString("#,##0.00")</span><span style="color:#cfd8dc "> / $@Convert.ToDouble(TempData["housingTotal"]).ToString("#,##0.00")</span></h5>
                        }
                        <div id="donutchartHousing" class="center-div" style="width: 500px; height: 300px; margin-top:-10px;"></div>
                    </div>
                </div>

                <div class="row">
                    <div class="col s12 m12 l6">
                        @{double remainingE = item.EntLimit - Convert.ToDouble(TempData["entTotal"]);}

                        @*More than the total has been spent*@
                        @if (remainingE <= 0)
                        {
                            <h5 style="margin-left:150px;"><span style="color:#e6c5c4">$@remainingE.ToString("#,##0.00")</span></h5>
                        }

                        @*Still some of the budget left*@
                        else
                        {
                            <h5 style="margin-left:150px;"><span style="color:#b2dfdb">$@remainingE.ToString("#,##0.00")</span><span style="color:#cfd8dc "> / $@Convert.ToDouble(TempData["entTotal"]).ToString("#,##0.00")</span></h5>
                        }
                        <div id="donutchartEntertainment" class="center-div" style="width: 500px; height: 300px; margin-top:10px;"></div>
                    </div>

                    <div class="col s12 m12 l6">
                        @{double remainingB = item.BillsLimit - Convert.ToDouble(TempData["billsTotal"]);}

                        @*More than the total has been spent*@
                        @if (remainingB <= 0)
                        {
                            <h5 style="margin-left:150px;"><span style="color:#e6c5c4">$@remainingB.ToString("#,##0.00")</span></h5>
                        }

                        @*Still some of the budget left*@
                        else
                        {
                            <h5 style="margin-left:150px;"><span style="color:#b2dfdb">$@remainingB.ToString("#,##0.00")</span><span style="color:#cfd8dc "> / $@Convert.ToDouble(TempData["billsTotal"]).ToString("#,##0.00")</span></h5>
                        }
                        <div id="donutchartBills" class="center-div" style="width: 500px; height: 300px; margin-top:10px;"></div>
                    </div>
            </div>

            <div class="row">
                <div class="col s12 m12 l6">
                    @{double remainingGas = item.GasLimit - Convert.ToDouble(TempData["gasTotal"]);}

                    @*More than the total has been spent*@
                    @if (remainingGas <= 0)
                    {
                        <h5 style="margin-left:150px;"><span style="color:#e6c5c4">$@remainingH.ToString("#,##0.00")</span></h5>
                    }

                    @*Still some of the budget left*@
                    else
                    {
                        <h5 style="margin-left:150px;"><span style="color:#b2dfdb">$@remainingGas.ToString("#,##0.00")</span><span style="color:#cfd8dc "> / $@Convert.ToDouble(TempData["gasTotal"]).ToString("#,##0.00")</span></h5>
                    }
                    <div id="donutchartGas" class="center-div" style="width: 500px; height: 300px; margin-top:10px;"></div>
                </div>

                <div class="col s12 m12 l6">
                    @{double remainingM = item.MiscLimit - Convert.ToDouble(TempData["miscTotal"]);}

                    @*More than the total has been spent*@
                    @if (remainingM <= 0)
                    {
                        <h5 style="margin-left:150px;"><span style="color:#e6c5c4">$@remainingM.ToString("#,##0.00")</span></h5>
                    }

                    @*Still some of the budget left*@
                    else
                    {
                        <h5 style="margin-left:150px;"><span style="color:#b2dfdb">$@remainingM.ToString("#,##0.00")</span><span style="color:#cfd8dc "> / $@Convert.ToDouble(TempData["miscTotal"]).ToString("#,##0.0")</span></h5>
                    }
                    <div id="donutchartMisc" class="center-div" style="width: 500px; height: 300px; margin-top:-10px;"></div>
                </div>
            </div>
        </div>
        }

        <div class="center-div" id="donutchartTotal" style="width: 900px; height: 500px;"></div>
    }
}


<style>
    .center-div {
        margin: 0 auto;
        width: 100px;
    }

    #Total Spent {
        color: #cfd8dc !important;
    }

    #Total Remaining Budget {
        color: #cfd8dc !important;
    }
</style>


<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

<script type="text/javascript">
    $(document).ready(function () {
        donutChartGrocery()
        donutChartHousing()
        donutChartEntertainment()
        donutChartBills()
        donutChartGas()
        donutChartMisc()
        donutChartTotal();
    });

    function donutChartGrocery() {
        var totalSpent = parseInt(document.getElementById('totalSpent').innerHTML);
        var totalBudget = parseInt(document.getElementById('totalBudget').innerHTML);

        var budgetData = [['Spent', 'Remaining'], ['Spent', totalSpent], ['Remaining', totalBudget]];

        google.charts.load("current", { packages: ["corechart"] });
        google.charts.setOnLoadCallback(drawChart);
        function drawChart() {
            var data = google.visualization.arrayToDataTable(budgetData);
            var options = {
                titleTextStyle: {
                    color: '#cfd8dc',
                    fontSize: 28,
                    bold: true,
                    fontName: 'arial',
                }
                , title: 'Groceries/Food',
                colors: ['#e6c5c4', '#b2dfdb'],
                pieHole: 0.5,
                backgroundColor: '#5c5c5c',
                color: '#cfd8dc',
                is3D: true,
            };
            var chart = new google.visualization.PieChart(document.getElementById('donutchartGrocery'));
            chart.draw(data, options);
        }
    }

    function donutChartHousing() {
        var totalSpent = parseInt(document.getElementById('totalSpent').innerHTML);
        var totalBudget = parseInt(document.getElementById('totalBudget').innerHTML);

        var budgetData = [['Spent', 'Remaining'], ['Spent', totalSpent], ['Remaining', totalBudget]];

        google.charts.load("current", { packages: ["corechart"] });
        google.charts.setOnLoadCallback(drawChart);
        function drawChart() {
            var data = google.visualization.arrayToDataTable(budgetData);
            var options = {
                titleTextStyle: {
                    color: '#cfd8dc',
                    fontSize: 28,
                    bold: true,
                    fontName: 'arial',
                }
                , title: 'Housing/Rent',
                colors: ['#e6c5c4', '#b2dfdb'],
                pieHole: 0.5,
                backgroundColor: '#5c5c5c',
                color: '#ffffff',
                is3D: true,
            };
            var chart = new google.visualization.PieChart(document.getElementById('donutchartHousing'));
            chart.draw(data, options);
        }
    }

    function donutChartEntertainment() {
        var totalSpent = parseInt(document.getElementById('totalSpent').innerHTML);
        var totalBudget = parseInt(document.getElementById('totalBudget').innerHTML);

        var budgetData = [['Spent', 'Remaining'], ['Spent', totalSpent], ['Remaining', totalBudget]];

        google.charts.load("current", { packages: ["corechart"] });
        google.charts.setOnLoadCallback(drawChart);
        function drawChart() {
            var data = google.visualization.arrayToDataTable(budgetData);
            var options = {
                titleTextStyle: {
                    color: '#cfd8dc',
                    fontSize: 28,
                    bold: true,
                    fontName: 'arial',
                }
                , title: 'Entertainment',
                colors: ['#e6c5c4', '#b2dfdb'],
                pieHole: 0.5,
                backgroundColor: '#5c5c5c',
                color: '#cfd8dc',
                is3D: true,
            };
            var chart = new google.visualization.PieChart(document.getElementById('donutchartEntertainment'));
            chart.draw(data, options);
        }
    }

    function donutChartBills() {
        var totalSpent = parseInt(document.getElementById('totalSpent').innerHTML);
        var totalBudget = parseInt(document.getElementById('totalBudget').innerHTML);

        var budgetData = [['Spent', 'Remaining'], ['Spent', totalSpent], ['Remaining', totalBudget]];

        google.charts.load("current", { packages: ["corechart"] });
        google.charts.setOnLoadCallback(drawChart);
        function drawChart() {
            var data = google.visualization.arrayToDataTable(budgetData);
            var options = {
                titleTextStyle: {
                    color: '#cfd8dc',
                    fontSize: 28,
                    bold: true,
                    fontName: 'arial',
                }
                , title: 'Bills',
                colors: ['#e6c5c4', '#b2dfdb'],
                pieHole: 0.5,
                backgroundColor: '#5c5c5c',
                color: '#cfd8dc',
                is3D: true,
            };
            var chart = new google.visualization.PieChart(document.getElementById('donutchartBills'));
            chart.draw(data, options);
        }
    }

    function donutChartGas() {
        var totalSpent = parseInt(document.getElementById('totalSpent').innerHTML);
        var totalBudget = parseInt(document.getElementById('totalBudget').innerHTML);

        var budgetData = [['Spent', 'Remaining'], ['Spent', totalSpent], ['Remaining', totalBudget]];

        google.charts.load("current", { packages: ["corechart"] });
        google.charts.setOnLoadCallback(drawChart);
        function drawChart() {
            var data = google.visualization.arrayToDataTable(budgetData);
            var options = {
                titleTextStyle: {
                    color: '#cfd8dc',
                    fontSize: 28,
                    bold: true,
                    fontName: 'arial',
                }
                , title: 'Gas/Car',
                colors: ['#e6c5c4', '#b2dfdb'],
                pieHole: 0.5,
                backgroundColor: '#5c5c5c',
                color: '#cfd8dc',
                is3D: true,
            };
            var chart = new google.visualization.PieChart(document.getElementById('donutchartGas'));
            chart.draw(data, options);
        }
    }

    function donutChartMisc() {
        var totalSpent = parseInt(document.getElementById('totalSpent').innerHTML);
        var totalBudget = parseInt(document.getElementById('totalBudget').innerHTML);

        var budgetData = [['Spent', 'Remaining'], ['Spent', totalSpent], ['Remaining', totalBudget]];

        google.charts.load("current", { packages: ["corechart"] });
        google.charts.setOnLoadCallback(drawChart);
        function drawChart() {
            var data = google.visualization.arrayToDataTable(budgetData);
            var options = {
                titleTextStyle: {
                    color: '#cfd8dc',
                    fontSize: 28,
                    bold: true,
                    fontName: 'arial',
                }
                , title: 'Miscellaneous',
                colors: ['#e6c5c4', '#b2dfdb'],
                pieHole: 0.5,
                backgroundColor: '#5c5c5c',
                color: '#cfd8dc',
                is3D: true,
            };
            var chart = new google.visualization.PieChart(document.getElementById('donutchartMisc'));
            chart.draw(data, options);
        }
    }

    function donutChartTotal() {
        var totalSpent = parseInt(document.getElementById('totalSpent').innerHTML);
        var totalBudget = parseInt(document.getElementById('totalBudget').innerHTML);

        var budgetData = [['Spent', 'Remaining'], ['Spent', totalSpent], ['Remaining', totalBudget]];

        google.charts.load("current", { packages: ["corechart"] });
        google.charts.setOnLoadCallback(drawChart);
        function drawChart() {
            var data = google.visualization.arrayToDataTable(budgetData);
            var options = {
                titleTextStyle: {
                    color: '#cfd8dc',
                    fontSize: 28,
                    bold: true,
                    fontName: 'arial',
                }
                , title: 'Total Spent / Budget Total',
                colors: ['#e6c5c4', '#b2dfdb'],
                pieHole: 0.5,
                backgroundColor: '#5c5c5c',
                color: '#cfd8dc',
                is3D: true,
            };
            var chart = new google.visualization.PieChart(document.getElementById('donutchartTotal'));
            chart.draw(data, options);
        }
    };
</script>

