@model MyWebsite.Models.BudgetProject.Budget
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    var user = User.Identity.Name;
    var currentMonth = DateTime.Now.ToString("MMMM");
}

<div class="painlessBudgetTitle"><p>@Html.Partial("_LoginPartial", 1)</p></div>
<h3 class="painlessBudgetTitle">The Painless Budget</h3>

@if (!SignInManager.IsSignedIn(User))
{
    <p style="text-align:center; font-size:20px; margin-top:30px; ">Please log in or register first to use the app.</p>
    <div class="carousel">
        <a class="carousel-item" href="#one!"><img src="~/images/painlessBudget/painlessBudget1.png" /></a>
        <a class="carousel-item" href="#two!"><img src="~/images/painlessBudget/painlessBudget2.png" /></a>
        <a class="carousel-item" href="#three!"><img src="~/images/painlessBudget/painlessBudget3.png" /></a>
        <a class="carousel-item" href="#four!"><img src="~/images/painlessBudget/painlessBudget4.png" /></a>
        <a class="carousel-item" href="#five!"><img src="~/images/painlessBudget/painlessBudget5.png" /></a>
    </div>
}

else
{
    if (ViewBag.NoCurrentBudget)
    {
        if (ViewBag.HasPastBudget)
        {
            <h3 style="text-align:center; color:#cfd8dc; font-weight:bold; margin-bottom:15px;">@currentMonth</h3>
            <h5 style="text-align: center; color: #54b798; margin-bottom: 50px;">A budget has not yet been created for the month of @currentMonth.</h5>
            <div style="margin-top:35px;">
                <div class="row">
                    <div class="col l12 m12 s12" align="center">
                        @*Use past budget limit for this month?*@
                        <form method="post" action="@Url.Action("Index", "Budgets", new { usePastBudgetLimit = ViewBag.HasPastBudget })">
                            <button class="waves-effect waves-light btn-large grey darken-3 underline-hover squareSaveBtn" type="submit" name="Save">
                                <i class="material-icons left">replay</i>Use<span style="color:#cfd8dc;"> Last Month's</span> Budget Limits for @currentMonth
                            </button>
                            @Html.Hidden("Email", user)
                            @Html.Hidden("Month", DateTime.Now.Month)
                        </form>
                        <button id="unhide-set-budget-form" class="waves-effect waves-light underline-hover btn-large grey darken-4" style="margin-top:30px;">
                            <i class="material-icons left">create</i>Create <span style="color:#54b798">New</span> Budget Limits
                        </button>
                        <a href='@Url.Action("PastBudgets", "Budgets")' class="waves-effect waves-light underline-hover btn-large grey darken-4" style="margin-top:30px;"><i class="material-icons left">date_range</i>View Past Budgets</a>
                        <a href='@Url.Action("BudgetInsights", "Budgets")' class="waves-effect underline-hover waves-light underline-hover btn-large grey darken-4" style="margin-top:30px;"><i class="material-icons left">trending_up</i>Budget Insights</a>
                        <a href='@Url.Action("AddTransaction", "Budgets")' class="waves-effect waves-light underline-hover btn-large grey darken-4" style="margin-top:30px;"><i class="material-icons left">insert_chart</i>Transfer to Excel</a>
                    </div>
                </div>
                <h6 style="text-align: center; font-weight: bold; color: #D50000">@ViewBag.BudgetLimitError</h6>
            </div>

            //Set Budget Limits Form - Choose New Limits
            <div id="hidden-set-budget-form" style="display:none; margin-bottom: 20px;">
                <form method="post" action="@Url.Action("Index", "Budgets", new { usePastBudgetLimit = false })">
                    <div style="margin-top:35px; text-align:center;">
                        <button class="waves-effect waves-light btn-large underline-hover" style="background-color: #54b798; font-weight:bold; font-size:20px;" type="submit" name="Save">
                            <i class="material-icons left">local_atm</i>Save Budget Limits
                        </button>
                    </div>
                    <div class="row" style="margin-top:20px; margin-left: 200px; margin-right: 200px;">
                        <div class="col s12 m12 l4">
                            <h5 style="margin-top:77px; font-weight:bold;">Groceries | Restaurant</h5>
                            <div class="input-field">
                                <i class="material-icons prefix" style="margin-top:30px; color:#54b798;">attach_money</i>
                                <input name="GroceryLimit" placeholder="0" id="budget-limit-amount" type="number" class="validate">
                            </div>
                        </div>
                        <div class="col s12 m12 l4">
                            <h5 style="margin-top:77px; font-weight:bold;">Mortgage | Rent</h5>
                            <div class="input-field">
                                <i class="material-icons prefix" style="margin-top:30px; color:#54b798;">attach_money</i>
                                <input name="HousingLimit" placeholder="0" id="budget-limit-amount" type="number" class="validate">
                            </div>
                        </div>
                        <div class="col s12 m12 l4">
                            <h5 style="margin-top:77px; font-weight:bold;">Entertainment</h5>
                            <div class="input-field">
                                <i class="material-icons prefix" style="margin-top:30px; color:#54b798;">attach_money</i>
                                <input name="EntLimit" placeholder="0" id="budget-limit-amount" type="number" class="validate">
                            </div>
                        </div>
                    </div>
                    <div class="row" style="margin-top:77px; margin-left:200px; margin-right:200px;">
                        <div class="col s12 m12 l4">
                            <h5 style="margin-top:77px; font-weight:bold;">Bills | Payments</h5>
                            <div class="input-field">
                                <i class="material-icons prefix" style="margin-top:30px; color:#54b798;">attach_money</i>
                                <input name="BillsLimit" placeholder="0" id="budget-limit-amount" type="number" class="validate">
                            </div>
                        </div>
                        <div class="col s12 m12 l4">
                            <h5 style="margin-top:77px; font-weight:bold;">Gas | Auto</h5>
                            <div class="input-field">
                                <i class="material-icons prefix" style="margin-top:30px; color:#54b798;">attach_money</i>
                                <input name="GasLimit" placeholder="0" id="budget-limit-amount" type="number" class="validate">
                            </div>
                        </div>
                        <div class="col s12 m12 l4">
                            <h5 style="margin-top:77px; font-weight:bold;">Miscellaneous Expenses</h5>
                            <div class="input-field">
                                <i class="material-icons prefix" style="margin-top:30px; color:#54b798;">attach_money</i>
                                <input name="MiscLimit" placeholder="0" id="budget-limit-amount" type="number" class="validate">
                            </div>
                        </div>
                    </div>
                    @Html.Hidden("Email", user)
                    @Html.Hidden("GroceryLimit", "GroceryLimit")
                    @Html.Hidden("HousingLimit", "HousingLimit")
                    @Html.Hidden("EntLimit", "EntLimit")
                    @Html.Hidden("BillsLimit", "BillsLimit")
                    @Html.Hidden("GasLimit", "GasLimit")
                    @Html.Hidden("MiscLimit", "MiscLimit")
                    @Html.Hidden("Month", DateTime.Now.Month)
                </form>
                @*End of Set Budget Limit Form*@
            </div>
        }
        else //Has Never Had Budget - New Set Budget Limits Form
        {
            @Html.Partial("_SetBudgetLimitForm")
        }
    }

    else //Has Current Budget Information to Display
    {
        <div style="margin-top:55px; margin-bottom: 55px; text-align:center;">
            <h5 style="text-align:center; color:#54b798; margin-top:10px;">@ViewBag.SuccessLimitsUpdated</h5>
            <h3 style="text-align:center; color:#cfd8dc; font-weight:bold; margin-bottom:15px;">@currentMonth</h3>

            <a href='@Url.Action("AddTransaction", "Budgets")' class="waves-effect waves-light btn-large underline-hover grey darken-4" style="margin-top:10px;"><i class="material-icons left">add_box</i>Add Transaction</a>
            <a asp-action="Edit" asp-route-id="@ViewBag.BudgetId" class="waves-effect waves-light btn-large underline-hover grey darken-4" style="margin-top:10px;"><i class="material-icons left">edit</i>Edit Budget Limits</a>
            <a href='@Url.Action("PastBudgets", "Budgets")' class="waves-effect waves-light btn-large underline-hover grey darken-4" style="margin-top:10px;"><i class="material-icons left">date_range</i>View Past Budgets</a>
            <a href='@Url.Action("BudgetInsights", "Budgets")' class="waves-effect waves-light btn-large underline-hover grey darken-4" style="margin-top:10px;"><i class="material-icons left">trending_up</i>Budget Insights</a>
            <a href='@Url.Action("ExportExcel", "Budgets")' class="waves-effect waves-light btn-large underline-hover grey darken-4" style=" margin-top:10px;"><i class="material-icons left">insert_chart</i>Transfer to Excel</a>
        </div>

        if (Model != null) //Display donut charts
        {
            <div class="container" style="margin-bottom:100px;">
                <div class="row">
                    <div class="col s12 m12 l6">
                        @{float remainingG = Model.GroceryLimit - ViewBag.BudgetTotals[0] < 0 ? 0 : Model.GroceryLimit - ViewBag.BudgetTotals[0];}
                        @if (0 >= remainingG)
                        {
                            <h5 style="margin-left: 150px;"><span style="color: #e6c5c4">$@remainingG.ToString("#,##0.00")</span></h5>
                        }
                        else
                        {
                            <h5 style="margin-left: 150px;"><span style="color: #54b798">$@remainingG.ToString("#,##0.00") left</span></h5>
                        }
                        <a class="btn tooltipped tooltippedStyle" data-position="right" data-tooltip="$@Model.GroceryLimit.ToString("#,##0.00")">View Budget Limit</a>
                        <div id="donutchartGrocery" class="center-div donutSize"></div>
                        <h2 id="totalBudgetG" style="display: none">@remainingG</h2>
                        <h2 id="totalSpentG" style="display: none">@ViewBag.BudgetTotals[0]</h2>
                    </div>

                    <div class="col s12 m12 l6">
                        @{float remainingH = Model.HousingLimit - ViewBag.BudgetTotals[1] < 0 ? 0 : Model.HousingLimit - ViewBag.BudgetTotals[1];}
                        @if (0 >= remainingH)
                        {
                            <h5 style="margin-left:150px;"><span style="color:#e6c5c4">$@remainingH.ToString("#,##0.00")</span></h5>
                        }
                        else
                        {
                            <h5 style="margin-left:150px;"><span style="color:#54b798">$@remainingH.ToString("#,##0.00") left</span></h5>
                        }
                        <a class="btn tooltipped tooltippedStyle" data-position="right" data-tooltip="$@Model.HousingLimit.ToString("#,##0.00")">View Budget Limit</a>
                        <div id="donutchartHousing" class="center-div donutSize"></div>
                        <h2 id="totalBudgetH" style="display:none">@remainingH</h2>
                        <h2 id="totalSpentH" style="display:none">@ViewBag.BudgetTotals[1]</h2>
                    </div>

                    <div class="row">
                        <div class="col s12 m12 l6">
                            @{float remainingE = Model.EntLimit - ViewBag.BudgetTotals[2] < 0 ? 0 : Model.EntLimit - ViewBag.BudgetTotals[2];}
                            @if (0 >= remainingE)
                            {
                                <h5 style="margin-left:150px;"><span style="color:#e6c5c4">$@remainingE.ToString("#,##0.00")</span></h5>
                            }
                            else
                            {
                                <h5 style="margin-left:150px;"><span style="color:#54b798">$@remainingE.ToString("#,##0.00") left</span></h5>
                            }
                            <a class="btn tooltipped tooltippedStyle" data-position="right" data-tooltip="$@Model.EntLimit.ToString("#,##0.00")">View Budget Limit</a>
                            <div id="donutchartEntertainment" class="center-div donutSize"></div>
                            <h2 id="totalBudgetE" style="display:none">@remainingE</h2>
                            <h2 id="totalSpentE" style="display:none">@ViewBag.BudgetTotals[2]</h2>
                        </div>

                        <div class="col s12 m12 l6">
                            @{float remainingB = Model.BillsLimit - ViewBag.BudgetTotals[3] < 0 ? 0 : Model.BillsLimit - ViewBag.BudgetTotals[3];}
                            @if (0 >= remainingB)
                            {
                                <h5 style="margin-left:150px;"><span style="color:#e6c5c4">$@remainingB.ToString("#,##0.00")</span></h5>
                            }
                            else
                            {
                                <h5 style="margin-left:150px;"><span style="color:#54b798">$@remainingB.ToString("#,##0.00") left</span></h5>
                            }
                            <a class="btn tooltipped tooltippedStyle" data-position="right" data-tooltip="$@Model.BillsLimit.ToString("#,##0.00")">View Budget Limit</a>
                            <div id="donutchartBills" class="center-div donutSize"></div>
                            <h2 id="totalBudgetB" style="display:none">@remainingB</h2>
                            <h2 id="totalSpentB" style="display:none">@ViewBag.BudgetTotals[3]</h2>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col s12 m12 l6">
                            @{float remainingGas = Model.GasLimit - ViewBag.BudgetTotals[4] < 0 ? 0 : Model.GasLimit - ViewBag.BudgetTotals[4];}
                            @if (0 >= remainingGas)
                            {
                                <h5 style="margin-left:150px;"><span style="color:#e6c5c4">$@remainingH.ToString("#,##0.00")</span></h5>
                            }
                            else
                            {
                                <h5 style="margin-left:150px;"><span style="color:#54b798">$@remainingGas.ToString("#,##0.00") left</span></h5>
                            }
                            <a class="btn tooltipped tooltippedStyle" data-position="right" data-tooltip="$@Model.GasLimit.ToString("#,##0.00")">View Budget Limit</a>
                            <div id="donutchartGas" class="center-div donutSize"></div>
                            <h2 id="totalBudgetGas" style="display:none">@remainingGas</h2>
                            <h2 id="totalSpentGas" style="display:none">@ViewBag.BudgetTotals[4]</h2>
                        </div>

                        <div class="col s12 m12 l6">
                            @{float remainingM = Model.MiscLimit - ViewBag.BudgetTotals[5] < 0 ? 0 : Model.MiscLimit - ViewBag.BudgetTotals[5];}
                            @if (0 >= remainingM)
                            {
                                <h5 style="margin-left:150px;"><span style="color:#e6c5c4">$@remainingM.ToString("#,##0.00")</span></h5>
                            }
                            else
                            {
                                <h5 style="margin-left:150px;"><span style="color:#54b798">$@remainingM.ToString("#,##0.00") left</span></h5>
                            }
                            <a class="btn tooltipped tooltippedStyle" data-position="right" data-tooltip="$@Model.MiscLimit.ToString("#,##0.00")">View Budget Limit</a>
                            <div id="donutchartMisc" class="center-div donutSize"></div>
                            <h2 id="totalBudgetM" style="display:none">@remainingM</h2>
                            <h2 id="totalSpentM" style="display:none">@ViewBag.BudgetTotals[5]</h2>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
}

<style>
    #Total Spent {
        color: #cfd8dc !important;
    }

    #Total Remaining Budget {
        color: #cfd8dc !important;
    }

    .carousel .carousel-item {
        width: 600px !important;
        height: 300px !important;
    }
</style>

<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

<script type="text/javascript">
    $(document).ready(function () {
        $('.tooltipped').tooltip();
        $('.carousel').carousel();
        donutChartGrocery();
        donutChartHousing();
        donutChartEntertainment();
        donutChartBills();
        donutChartGas();
        donutChartMisc();
    });


    $('#unhide-set-budget-form').click(function () {
        $('#hidden-set-budget-form').toggle();
    });

    function donutChartGrocery() {
        var totalSpentG = parseInt(document.getElementById('totalSpentG').innerHTML);
        var totalBudgetG = parseInt(document.getElementById('totalBudgetG').innerHTML);

        var budgetData = [['SPENT', 'LEFT'], ['Total Spent', totalSpentG], ['Remaining Budget', totalBudgetG]];

        google.charts.load("current", { packages: ["corechart"] });
        google.charts.setOnLoadCallback(drawChart);
        function drawChart() {
            var data = google.visualization.arrayToDataTable(budgetData);
            var options = {
                titleTextStyle: {
                    color: '#cfd8dc',
                    fontSize: 28,
                    bold: true,
                    fontName: 'arial',
                }
                , title: 'Grocery | Restaurant ',
                fontSize: 17,
                colors: ['#e6c5c4', '#54b798'],
                pieHole: 0.5,
                backgroundColor: '#080C10',
                color: '#cfd8dc',
                is3D: true,
            };
            var chart = new google.visualization.PieChart(document.getElementById('donutchartGrocery'));
            chart.draw(data, options);
        }
    }

    function donutChartHousing() {
        var totalSpentH = parseInt(document.getElementById('totalSpentH').innerHTML);
        var totalBudgetH = parseInt(document.getElementById('totalBudgetH').innerHTML);

        var budgetData = [['SPENT', 'LEFT'], ['Total Spent', totalSpentH], ['Remaining Budget', totalBudgetH]];

        google.charts.load("current", { packages: ["corechart"] });
        google.charts.setOnLoadCallback(drawChart);
        function drawChart() {
            var data = google.visualization.arrayToDataTable(budgetData);
            var options = {
                titleTextStyle: {
                    color: '#cfd8dc',
                    fontSize: 28,
                    bold: true,
                    fontName: 'arial',
                }
                , title: 'Mortgage | Rent',
                fontSize: 17,
                colors: ['#e6c5c4', '#54b798'],
                pieHole: 0.5,
                backgroundColor: '#080C10',
                color: '#ffffff',
                is3D: true,
            };
            var chart = new google.visualization.PieChart(document.getElementById('donutchartHousing'));
            chart.draw(data, options);
        }
    }

    function donutChartEntertainment() {
        var totalSpentE = parseInt(document.getElementById('totalSpentE').innerHTML);
        var totalBudgetE = parseInt(document.getElementById('totalBudgetE').innerHTML);

        var budgetData = [['SPENT', 'LEFT'], ['Total Spent', totalSpentE], ['Remaining Budget', totalBudgetE]];

        google.charts.load("current", { packages: ["corechart"] });
        google.charts.setOnLoadCallback(drawChart);
        function drawChart() {
            var data = google.visualization.arrayToDataTable(budgetData);
            var options = {
                titleTextStyle: {
                    color: '#cfd8dc',
                    fontSize: 28,
                    bold: true,
                    fontName: 'arial',
                }
                , title: 'Entertainment',
                fontSize: 17,
                colors: ['#e6c5c4', '#54b798'],
                pieHole: 0.5,
                backgroundColor: '#080C10',
                color: '#cfd8dc',
                is3D: true,
            };
            var chart = new google.visualization.PieChart(document.getElementById('donutchartEntertainment'));
            chart.draw(data, options);
        }
    }

    function donutChartBills() {
        var totalSpentB = parseInt(document.getElementById('totalSpentB').innerHTML);
        var totalBudgetB = parseInt(document.getElementById('totalBudgetB').innerHTML);

        var budgetData = [['SPENT', 'LEFT'], ['Total Spent', totalSpentB], ['Remaining Budget', totalBudgetB]];

        google.charts.load("current", { packages: ["corechart"] });
        google.charts.setOnLoadCallback(drawChart);
        function drawChart() {
            var data = google.visualization.arrayToDataTable(budgetData);
            var options = {
                titleTextStyle: {
                    color: '#cfd8dc',
                    fontSize: 28,
                    bold: true,
                    fontName: 'arial',
                }
                , title: 'Bills | Payments',
                fontSize: 17,
                colors: ['#e6c5c4', '#54b798'],
                pieHole: 0.5,
                backgroundColor: '#080C10',
                color: '#cfd8dc',
                is3D: true,
            };
            var chart = new google.visualization.PieChart(document.getElementById('donutchartBills'));
            chart.draw(data, options);
        }
    }

    function donutChartGas() {
        var totalSpentGas = parseInt(document.getElementById('totalSpentGas').innerHTML);
        var totalBudgetGas = parseInt(document.getElementById('totalBudgetGas').innerHTML);

        var budgetData = [['SPENT', 'LEFT'], ['Total Spent', totalSpentGas], ['Remaining Budget', totalBudgetGas]];

        google.charts.load("current", { packages: ["corechart"] });
        google.charts.setOnLoadCallback(drawChart);
        function drawChart() {
            var data = google.visualization.arrayToDataTable(budgetData);
            var options = {
                titleTextStyle: {
                    color: '#cfd8dc',
                    fontSize: 28,
                    bold: true,
                    fontName: 'arial',
                }
                , title: 'Gas | Auto',
                fontSize: 17,
                colors: ['#e6c5c4', '#54b798'],
                pieHole: 0.5,
                backgroundColor: '#080C10',
                color: '#cfd8dc',
                is3D: true,
            };
            var chart = new google.visualization.PieChart(document.getElementById('donutchartGas'));
            chart.draw(data, options);
        }
    }

    function donutChartMisc() {
        var totalSpentM = parseInt(document.getElementById('totalSpentM').innerHTML);
        var totalBudgetM = parseInt(document.getElementById('totalBudgetM').innerHTML);

        var budgetData = [['SPENT', 'LEFT'], ['Total Spent', totalSpentM], ['Remaining Budget', totalBudgetM]];

        google.charts.load("current", { packages: ["corechart"] });
        google.charts.setOnLoadCallback(drawChart);
        function drawChart() {
            var data = google.visualization.arrayToDataTable(budgetData);
            var options = {
                titleTextStyle: {
                    color: '#cfd8dc',
                    fontSize: 28,
                    bold: true,
                    fontName: 'arial',
                }
                , title: 'Miscellaneous',
                fontSize: 17,
                colors: ['#e6c5c4', '#54b798'],
                pieHole: 0.5,
                backgroundColor: '#080C10',
                color: '#cfd8dc',
                is3D: true,
            };
            var chart = new google.visualization.PieChart(document.getElementById('donutchartMisc'));
            chart.draw(data, options);
        }
    }
</script>

