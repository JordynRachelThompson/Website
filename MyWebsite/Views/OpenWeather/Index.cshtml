@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<div id="particles-js-snow"></div>
<div id="email" style="display:none">@User.Identity.Name</div>
<div id="previouslySelectedCity" style="display:none">@ViewBag.City</div>

<div style="text-align:center; margin-top:100px;"><p style="text-align:center;">@Html.Partial("_LoginPartial", 2) </p></div>
@*Current weather card*@
<div id="weatherResponse" style="color: black; width: 40%; display: none; margin-left: 10px; margin-top: -35px; float:left"></div>
<h3 id="weatherApp" style="text-align:center; color:black; font-weight: bold; margin-top:100px;">Weather App</h3>

@*7 Day Forecast / Manage UserWeatherPreferences Alerts BTNS*@
<div align="center" style="margin:30px;">
    <a id="forecastBtn" href='#' ; class="waves-effect waves-light btn-large z-depth-1 weatherBtn"><i style="color:#ff7733;" class="far fa-sun"></i><b> View 5 Day/Hourly Forecast</b></a>
    <a id="managerAlertsBtn" href='#' ; class="waves-effect waves-light btn-large z-depth-1 weatherBtn"><i style="color:#ff7733;" class="fas fa-cloud-sun"></i><b> Manage My Weather Alerts</b></a>
</div>

<div align="center" style="margin-top: 50px;">
    <h4 class="black-text"><i class="fas fa-map-marker-alt"></i> Set your City to View Weather</h4>
    <input type="text" id="city" class="weatherCityInput z-depth-3" placeholder=' enter city name...' />
    <!--Switch -->
    <div class="switch" style="display: inline-block;">
        <label>
            Off
            <input id="cityCheckbox" type="checkbox" name="cityCheckbox">
            <span class="lever"></span>
            Set City
        </label>
    </div>
    <h5 id="enterCityName" style="display: none; color:#ff7733;">Please type a city name first.</h5>

    @if (!SignInManager.IsSignedIn(User))
    {
        <h4 id="registerFirst" class="weatherHiddenBlackTxt"><i style="color:#ff7733;" class="fas fa-exclamation"></i> Please log in or register to set city preferences and manage weather alerts.</h4>
    }

    <h4 id="setCityFirst" class="weatherHiddenBlackTxt"><i style="color:#ff7733;" class="fas fa-map-pin"></i> Please set your city to view the 5 day/hourly forecast.</h4>

    @*5 Day Forecast*@
    <div id="forecast" class="black-text" style="background-color: #c3cce0 !important; display: none;">
        <h4 class="black-text">5 Day Forecast</h4>
        <div class="row" id="forecastDayData">@*DATA*@</div>
        @*Hourly Forecast Card*@

        @*<div id="hourlyForecast1" class="black-text" style="display:none">
                <div class="row">
                    <div class="col s10 offset-s2">
                        @for (var i = 0; i < 10; i++)
                        {
                            <div class="card col l1" style="background-color: #bec5d6 !important;">
                                <div class="card-content">
                                    <span class="card-title"><i class="fas fa-cloud"></i> Time</span>
                                    <div>
                                        <p>description</p>
                                        <p>temp</p>
                                        <p>Cloud percentage Humidity percentage</p>
                                    </div>
                                </div>
                                <div class="card-action">
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>*@
        </div>

        @*Manage Alerts*@
        <div id="manageAlerts" class="black-text" style="background-color: #c3cce0 !important; display: none;">
            <h4 class="black-text">Manage</h4>
        </div>
    </div>


<style>
    body {
        background-color: #c3cce0 !important;
    }

    #particles-js-snow canvas {
        position: absolute;
        width: 100%;
        height: 100%;
        z-index: -1;
    }

    label {
        margin-left: 10px;
        font-size: 20px !important;
    }

    #weatherIcon {
        width: 55px;
        height: auto;
    }
</style>


<script src="~/js/particles.js"></script>
<script>
    SetPreselectedCity();

    //Change main 2 btn colors when clicked & hourly forecast btn
    var clickedForecast = true;
    var clickedManage = true;
    $('#forecastBtn').click(function () {
        if (clickedForecast) {
            $(this).css("cssText", "background-color: #263442 !important;");
            clickedForecast = false;
        } else {
            $(this).css("cssText", "background-color: #141d26 !important;");
            clickedForecast = true;
        }
    });

    $('#managerAlertsBtn').click(function () {
        if (clickedManage) {
            $(this).css("cssText", "background-color: #263442 !important;");
            clickedManage = false;
        } else {
            $(this).css("cssText", "background-color: #141d26 !important;");
            clickedManage = true;
        }
    });
    
    //5 Day Forecast Btn
    $("#forecastBtn").click(function () {
        if (($('#city').val() == "") || ($('#city').val() == " enter city name...")) {
            $('#setCityFirst').toggle();
        } else {
            $("#forecast").toggle();
            $('#setCityFirst').hide();
        }
    });

    //Hourly Forecast Btn
    $('#hourlyForecastBtn').click(function() {
        $('#hourlyForecast').toggle();
    });

    //Manage Alerts Btn
    $('#managerAlertsBtn').click(function () {
        if (($('#email').val() == "")) {
            $('#registerFirst').toggle();
        } else {
            $('#registerFirst').hide();
            if (($('#city').val() == "") || ($('#city').val() == " enter city name...")) {
                $('#setCityFirst').toggle();
            } else {
                $('#manageAlerts').toggle();
            }
        }
    });

    //Switch toggle
    $(".switch").find("input[type=checkbox]").on("change",
        function () {
            var status = $(this).prop('checked');
            if (status) {
                if ($('#city').val() !== "") {
                    $('#enterCityName').hide();
                    GetWeather($('#city').val());
                    GetForecast($('#city').val());
                } else {
                    $('#enterCityName').show();
                }
            }
            else {
                $('#city').val(" enter city name...");
                $('#weatherResponse').hide();
                $('#registerFirst').hide();
                $(this).prop('checked', false);
            }
        });

    function SetPreselectedCity() {
        var preselectedCity = "@ViewBag.City";
        if (preselectedCity != "False") {
            GetWeather(preselectedCity);
            GetForecast(preselectedCity);
            $('#cityCheckbox').prop('checked', true);
        } 
    }

    //Get weather now by city
    function GetWeather(selectedCity) {

        var url = '/api/Weather/City/' + selectedCity;
        $.ajax({
            url: url,
            type: 'GET',
            success: function (data) {
                var html = "<span><img id='weatherIcon' src='https://openweathermap.org/img/w/" + data.Icon + ".png'/><h6 style='display:inline; margin-right:5px; font-weight:bold'>" + data.City + "</h6></span>" +
                    "<span><i class='fas fa-thermometer-three-quarters'></i><h6 style='display:inline; margin-right:10px;'> " + data.Temp + " &deg;F " + data.Description + "</h6></span>";
                $('#weatherResponse').show();
                $('#weatherResponse').html(html);
                $('#city').val(data.City);
                $('#setCityFirst').hide();
            },
            error: function (result) {
                console.log('Error.' + result);
            }
        });
    }

    //Get 5 day hourly forecast by city
    function GetForecast(selectedCity) {

        var url = '/api/Forecast/City/' + selectedCity;
        $.ajax({
            url: url,
            type: 'GET',
            success: function (data) {
                $.each(data, function(index, row) {
                    console.log(data.List[1]);     
                });
                var now = moment(moment(), "YYYY-MM-DD HH:mm:ss");
                var forecastDayData = "";
                var hourlyData0 = "";
                var hourlyData1 = "";
                var hourlyData2 = "";
                var hourlyData3 = "";
                var hourlyData4 = "";
                var day0 = [];
                var day1 = [];
                var day2 = [];
                var day3 = [];
                var day4 = [];
                var indexCounter0 = 0;
                var indexCounter1 = 0;
                var indexCounter2 = 0;
                var indexCounter3 = 0;
                var indexCounter4 = 0;
                var indexesOfNewDays = [];
                var origDay = "";
                var newDaysIndex = 0;
                var sameDayIndex = 0;
                //Get index list of indexes with new day & get index list of same days
                for (var j = 0; j < data.List.length; j++) {
                    var dataDay = moment(data.List[j].Dt_txt);
                    dataDay = moment(dataDay).subtract(6, 'hours');
                    var day = moment(dataDay, 'dddd');

                    if (origDay != day.format('dddd')) {
                        indexesOfNewDays[newDaysIndex] = j;
                        newDaysIndex ++;
                    }
                    if (origDay != "" && origDay != day.format('dddd')) {
                        sameDayIndex ++;
                    }
                    switch (sameDayIndex) {
                        case (0):
                        day0[indexCounter0] = j;
                            indexCounter0++;
                            origDay = day.format('dddd');
                            break;
                        case (1):
                        day1[indexCounter1] = j;
                        indexCounter1++;
                        origDay = day.format('dddd');
                        break;
                    case (2):
                        day2[indexCounter2] = j;
                        indexCounter2++;
                        origDay = day.format('dddd');
                            break;
                    case (3):
                        day3[indexCounter3] = j;
                        indexCounter3++;
                        origDay = day.format('dddd');
                            break;
                    case (4):
                        day4[indexCounter4] = j;
                        indexCounter4++;
                        origDay = day.format('dddd');
                        break;
                    }
                }
                
                for (var i = 0; i < 5; i++) {
                    var counter = indexesOfNewDays[i];
                    //.add(5, 'days')
                    var icon = data.List[counter].Weather[0].Icon;
                    //var date = data.List[counter].Dt_txt;
                    var description = data.List[counter].Weather[0].Description;
                    var temp = data.List[counter].Main.Temp;
                    //var tempMax = data.List[counter].Main.temp_max;
                    //var tempMin = data.List[counter].Main.temp_min;
                    var clouds = data.List[counter].Clouds.All;
                    var humidity = data.List[counter].Main.Humidity;

                    var forecastData = "<div class='col s6 offset-s3'><div class='card' style='background-color: #bec5d6 !important;'>" +
                        "<div class='card-content black-text'>" +
                        "<span class='card-title'><img id='weatherIcon' src='https://openweathermap.org/img/w/" + icon + ".png'/>" + now.format('dddd') + ", " + now.format("MMMM-DD-YYYY") + "</span>" +
                        "<div><h5>" + description + "</h5><h6>Avg: " + temp + " &deg;F</h6><h6>Clouds: " + clouds + "% Humidity: " + humidity + "%</h6></div></div>" +
                        "<div class='card-action'><button id='hourlyForecastBtn" + i + "'class='waves-effect waves-light btn-large z-depth-1 weatherBtn'>" +
                        "<i class='far fa-clock'></i><b> Hourly Forecast</b></button></div></div></div>" +
                        "<div id='hourlyForecast" + i + "'class=black-text' style='display:none'></div>";
                    forecastDayData += forecastData;
                    now.add(1, 'days');
                    var dayIndex = 0;
                    if (i == 0) { //day0
                        hourlyData0 = "<div class='row'><div class='col s10 offset-s3'>";
                        for (var k = 0; k < day0.length; k++) {
                            dayIndex = day0[k];
                            var dateTime0 = moment(data.List[dayIndex].Dt_txt);
                            dateTime0 = moment(dateTime0).subtract(6, 'hours');
                            dateTime0 = moment(dateTime0).format('hh:mm A');
                            hourlyData0 += "<div class='card col l1' style='background-color: #bec5d6 !important;'>" +
                                "<div class='card-content'><span class='card-title'><img id='weatherIcon' src='https://openweathermap.org/img/w/" + data.List[dayIndex].Weather[0].Icon + ".png'/>" + dateTime0 + "</span><div>" +
                                "<p>" + data.List[dayIndex].Weather[0].Description + "</p><p>" + data.List[dayIndex].Main.Temp + " &deg;F</p><p>Clouds: " + data.List[dayIndex].Clouds.All + "% Humidity percentage</p></div></div><div class='card-action'></div></div>";
                        }
                    }
                    if (i == 1) { //day1
                        hourlyData1 = "<div class='row'><div class='col s10 offset-s3'>";
                        for (var k = 0; k < day1.length; k++) {
                            dayIndex = day1[k];
                            var dateTime1 = moment(data.List[dayIndex].Dt_txt);
                            dateTime1 = moment(dateTime1).subtract(6, 'hours');
                            dateTime1 = moment(dateTime1).format('hh:mm A');
                            hourlyData1 += "<div class='card col l1' style='background-color: #bec5d6 !important;'>" +
                                "<div class='card-content'><span class='card-title'><img id='weatherIcon' src='https://openweathermap.org/img/w/" + data.List[dayIndex].Weather[0].Icon + ".png'/>" + dateTime1 + "</span><div>" +
                                "<p>description</p><p>temp</p><p>Cloud percentage Humidity percentage</p></div></div><div class='card-action'></div></div>";
                        }
                    }
                    if (i == 2) { //day2
                        hourlyData2 = "<div class='row'><div class='col s10 offset-s3'>";
                        for (var k = 0; k < day2.length; k++) {
                            dayIndex = day2[k];
                            var dateTime2 = moment(data.List[dayIndex].Dt_txt);
                            dateTime2 = moment(dateTime2).subtract(6, 'hours');
                            dateTime2 = moment(dateTime2).format('hh:mm A');
                            hourlyData2 += "<div class='card col l1' style='background-color: #bec5d6 !important;'>" +
                                "<div class='card-content'><span class='card-title'><img id='weatherIcon' src='https://openweathermap.org/img/w/" + data.List[dayIndex].Weather[0].Icon + ".png'/>" + dateTime2 + "</span><div>" +
                                "<p>description</p><p>temp</p><p>Cloud percentage Humidity percentage</p></div></div><div class='card-action'></div></div>";
                        }
                    }
                    if (i == 3) { //day3
                        hourlyData3 = "<div class='row'><div class='col s10 offset-s3'>";
                        for (var k = 0; k < day3.length; k++) {
                            dayIndex = day3[k];
                            var dateTime3 = moment(data.List[dayIndex].Dt_txt);
                            dateTime3 = moment(dateTime3).subtract(6, 'hours');
                            dateTime3 = moment(dateTime3).format('hh:mm A');
                            hourlyData3 += "<div class='card col l1' style='background-color: #bec5d6 !important;'>" +
                                "<div class='card-content'><span class='card-title'><img id='weatherIcon' src='https://openweathermap.org/img/w/" + data.List[dayIndex].Weather[0].Icon + ".png'/>" +  dateTime3 + "</span><div>" +
                                "<p>description</p><p>temp</p><p>Cloud percentage Humidity percentage</p></div></div><div class='card-action'></div></div>";
                        }
                    }
                    if (i == 4) { //day4
                        hourlyData4 = "<div class='row'><div class='col s10 offset-s3'>";
                        for (var k = 0; k < day4.length; k++) {
                            dayIndex = day4[k];
                            var dateTime4 = moment(data.List[dayIndex].Dt_txt);
                            dateTime4 = moment(dateTime4).subtract(6, 'hours');
                            dateTime4 = moment(dateTime4).format('hh:mm A');
                            hourlyData4 += "<div class='card col l1' style='background-color: #bec5d6 !important;'>" +
                                "<div class='card-content'><span class='card-title'><img id='weatherIcon' src='https://openweathermap.org/img/w/" + data.List[dayIndex].Weather[0].Icon + ".png'/>" + dateTime4 + "</span><div>" +
                                "<p>description</p><p>temp</p><p>Cloud percentage Humidity percentage</p></div></div><div class='card-action'></div></div>";
                        }
                    }
                    $('#forecastDayData').html(forecastDayData);
                    $('#hourlyForecast0').html(hourlyData0);
                    $('#hourlyForecast1').html(hourlyData1);
                    $('#hourlyForecast2').html(hourlyData2);
                    $('#hourlyForecast3').html(hourlyData3);
                    $('#hourlyForecast4').html(hourlyData4);
                }

            },
            error: function (result) {
                console.log('Error.' + result);
            }
        });
    }

    // 5 hourly forecast buttons
    var clickedHourly0 = true;
    var clickedHourly1 = true;
    var clickedHourly2 = true;
    var clickedHourly3 = true;
    var clickedHourly4 = true;

    $(document).on('click', '#hourlyForecastBtn0', function () {
        if (clickedHourly0) {
            $(this).css("cssText", "background-color: #263442 !important; color: #ff7733 !important");
            clickedHourly0 = false;
        } else {
            $(this).css("cssText", "background-color: #141d26 !important;  color: #cfd8dc !important");
            clickedHourly0 = true;
        }
        $('#hourlyForecast0').toggle();
    });

    $(document).on('click', '#hourlyForecastBtn1', function () {
        if (clickedHourly1) {
            $(this).css("cssText", "background-color: #263442 !important; color: #ff7733 !important");
            clickedHourly1 = false;
        } else {
            $(this).css("cssText", "background-color: #141d26 !important;  color: #cfd8dc !important");
            clickedHourly1 = true;
        }
        $('#hourlyForecast1').toggle();
    });

    $(document).on('click', '#hourlyForecastBtn2', function () {
        if (clickedHourly2) {
            $(this).css("cssText", "background-color: #263442 !important; color: #ff7733 !important");
            clickedHourly2 = false;
        } else {
            $(this).css("cssText", "background-color: #141d26 !important;  color: #cfd8dc !important");
            clickedHourly2 = true;
        }
        $('#hourlyForecast2').toggle();
    });

    $(document).on('click', '#hourlyForecastBtn3', function () {
        if (clickedHourly3) {
            $(this).css("cssText", "background-color: #263442 !important; color: #ff7733 !important");
            clickedHourly3 = false;
        } else {
            $(this).css("cssText", "background-color: #141d26 !important;  color: #cfd8dc !important");
            clickedHourly3 = true;
        }
        $('#hourlyForecast3').toggle();
    });

    $(document).on('click', '#hourlyForecastBtn4', function () {
        if (clickedHourly4) {
            $(this).css("cssText", "background-color: #263442 !important; color: #ff7733 !important");
            clickedHourly4 = false;
        } else {
            $(this).css("cssText", "background-color: #141d26 !important;  color: #cfd8dc !important");
            clickedHourly4 = true;
        }
        $('#hourlyForecast4').toggle();
    });  

    particlesJS("particles-js-snow", {
        "particles": {
            "number": {
                "value": 19,
                "density": {
                    "enable": true,
                    "value_area": 800
                }
            },
            "color": {
                "value": "#ffffff"
            },
            "shape": {
                "type": "circle",
                "stroke": {
                    "width": 0,
                    "color": "#000000"
                },
                "polygon": {
                    "nb_sides": 3
                },
                "image": {
                    "src": "img/github.svg",
                    "width": 80,
                    "height": 80
                }
            },
            "opacity": {
                "value": 0.9860984174322965,
                "random": true,
                "anim": {
                    "enable": false,
                    "speed": 1,
                    "opacity_min": 0.1,
                    "sync": false
                }
            },
            "size": {
                "value": 5,
                "random": true,
                "anim": {
                    "enable": false,
                    "speed": 40,
                    "size_min": 0.1,
                    "sync": false
                }
            },
            "line_linked": {
                "enable": false,
                "distance": 500,
                "color": "#ffffff",
                "opacity": 0.4,
                "width": 2
            },
            "move": {
                "enable": true,
                "speed": 4,
                "direction": "bottom-left",
                "random": false,
                "straight": false,
                "out_mode": "out",
                "bounce": false,
                "attract": {
                    "enable": false,
                    "rotateX": 600,
                    "rotateY": 1200
                }
            }
        },
        "interactivity": {
            "detect_on": "canvas",
            "events": {
                "onhover": {
                    "enable": true,
                    "mode": "bubble"
                },
                "onclick": {
                    "enable": false,
                    "mode": "repulse"
                },
                "resize": true
            },
            "modes": {
                "grab": {
                    "distance": 400,
                    "line_linked": {
                        "opacity": 0.5
                    }
                },
                "bubble": {
                    "distance": 400,
                    "size": 4,
                    "duration": 0.3,
                    "opacity": 1,
                    "speed": 3
                },
                "repulse": {
                    "distance": 200,
                    "duration": 0.4
                },
                "push": {
                    "particles_nb": 4
                },
                "remove": {
                    "particles_nb": 2
                }
            }
        },
        "retina_detect": true
    });
</script>